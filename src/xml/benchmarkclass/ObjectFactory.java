//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b52-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.12.02 at 05:44:20 PM GMT-03:00 
//
package xml.benchmarkclass;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the xml.benchmarkclass package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Wires_QNAME = new QName("", "wires");
    private final static QName _Nodes_QNAME = new QName("", "nodes");
    private final static QName _Name_QNAME = new QName("", "name");
    private final static QName _Path_QNAME = new QName("", "path");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: xml.benchmarkclass
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Bench }
     * 
     */
    public Bench createBench() {
        return new Bench();
    }

    /**
     * Create an instance of {@link Benchmarks }
     * 
     */
    public Benchmarks createBenchmarks() {
        return new Benchmarks();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "wires")
    public JAXBElement<Integer> createWires(Integer value) {
        return new JAXBElement<Integer>(_Wires_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "nodes")
    public JAXBElement<Integer> createNodes(Integer value) {
        return new JAXBElement<Integer>(_Nodes_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "name")
    public JAXBElement<String> createName(String value) {
        return new JAXBElement<String>(_Name_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "path")
    public JAXBElement<String> createPath(String value) {
        return new JAXBElement<String>(_Path_QNAME, String.class, null, value);
    }
}
